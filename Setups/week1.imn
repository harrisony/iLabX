node n1 {
    type lanswitch
    network-config {
	hostname SW1
	!
    }
    canvas c1
    iconcoords {330.0 418.0}
    labelcoords {330.0 442.0}
    interface-peer {e0 n2}
    interface-peer {e1 n3}
    interface-peer {e2 n4}
    interface-peer {e3 n5}
    interface-peer {e4 n6}
    interface-peer {e5 n7}
    interface-peer {e6 n11}
}

node n2 {
    type router
    model host
    network-config {
	hostname PC1
	!
	interface eth0
	 ip address 192.168.0.1/24
	 mac address 00:00:00:00:00:01
	 ipv6 address fde4:8dba:82e1::1/64
	!
    }
    canvas c1
    iconcoords {140.0 328.0}
    labelcoords {140.0 360.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('resolv.sh', )
	cmdup=('sh resolv.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:resolv.sh
	custom-command resolv.sh
	config {
	echo "nameserver 8.8.8.8" > /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip r add default via 192.168.0.254 dev eth0
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}
x
node n3 {
    type router
    model host
    network-config {
	hostname PC2
	!
	interface eth0
	 ip address 192.168.0.2/24
	 mac address 00:00:00:00:00:02
	 ipv6 address fde4:8dba:82e1::2/64
	!
    }
    canvas c1
    iconcoords {143.0 271.0}
    labelcoords {143.0 303.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('resolv.sh', )
	cmdup=('sh resolv.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:resolv.sh
	custom-command resolv.sh
	config {
	echo "nameserver 8.8.8.8" > /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip r add default via 192.168.0.254 dev eth0
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n4 {
    type router
    model host
    network-config {
	hostname PC3
	!
	interface eth0
	 mac address 00:00:00:00:00:03
	 ip address 192.168.0.3/24
	 ipv6 address fde4:8dba:82e1::3/64
	!
    }
    canvas c1
    iconcoords {144.0 210.0}
    labelcoords {144.0 242.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	dirs=('/var/run/apache2', '/var/log', '/run/lock/apache2', )
	files=('resolv.sh', )
	cmdup=('sh resolv.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:resolv.sh
	custom-command resolv.sh
	config {
	echo "nameserver 8.8.8.8" > /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=
	startidx=80
	cmdup=('chown www-data /var/lock/apache2', 'apache2ctl start', )
	cmddown=('apache2ctl stop', )
	cmdval=('pidof apache2', )
	meta=
	starttime=
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip r add default via 192.168.0.254 dev eth0
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n5 {
    type router
    model host
    network-config {
	hostname PC4
	!
	interface eth0
	 mac address 00:00:00:00:00:04
	 ip address 192.168.0.4/24
	 ipv6 address fde4:8dba:82e1::4/64
	!
    }
    canvas c1
    iconcoords {678.0 355.0}
    labelcoords {678.0 387.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('resolv.sh', )
	cmdup=('sh resolv.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:resolv.sh
	custom-command resolv.sh
	config {
	echo "nameserver 8.8.8.8" > /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip r add default via 192.168.0.254 dev eth0
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n6 {
    type router
    model host
    network-config {
	hostname PC5
	!
	interface eth0
	 mac address 00:00:00:00:00:05
	 ip address 192.168.0.5/24
	 ipv6 address fde4:8dba:82e1::5/64
	!
    }
    canvas c1
    iconcoords {679.0 298.0}
    labelcoords {679.0 330.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('resolv.sh', )
	cmdup=('sh resolv.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:resolv.sh
	custom-command resolv.sh
	config {
	echo "nameserver 8.8.8.8" > /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip r add default via 192.168.0.254 dev eth0
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n7 {
    type router
    model host
    network-config {
	hostname PC6
	!
	interface eth0
	 mac address 00:00:00:00:00:06
	 ip address 192.168.0.6/24
	 ipv6 address fde4:8dba:82e1::6/64
	!
    }
    canvas c1
    iconcoords {677.0 237.0}
    labelcoords {677.0 269.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('resolv.sh', )
	cmdup=('sh resolv.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:resolv.sh
	custom-command resolv.sh
	config {
	echo "nameserver 8.8.8.8" > /etc/resolv.conf
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip r add default via 192.168.0.254 dev eth0
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n8 {
    type lanswitch
    network-config {
	hostname SW2
	!
    }
    canvas c1
    iconcoords {403.0 100.0}
    labelcoords {403.0 124.0}
}

node n9 {
    type router
    model router
    network-config {
	hostname RT2
	!
    }
    canvas c1
    iconcoords {748.0 101.0}
    labelcoords {748.0 133.0}
}

node n10 {
    type router
    model router
    network-config {
	hostname RT1
	!
    }
    canvas c1
    iconcoords {110.0 77.0}
    labelcoords {110.0 109.0}
}

node n11 {
    type router
    model host
    network-config {
	hostname Gateway
	!
	interface eth1
	!
	interface eth0
	 ip address 192.168.0.254/24
	!
    }
    canvas c1
    iconcoords {170.0 463.0}
    labelcoords {170.0 495.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n12}
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	mkdir -p /var/run/resolvconf/interface
	#ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	ln -s /var/run/resolvconf/interface/eth1.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth1.pid -lf /var/run/dhclient-eth1.lease eth1
	
	}
    }
    custom-config {
	custom-config-id service:Firewall
	custom-command Firewall
	config {
	files=('firewall.sh', )
	}
    }
    custom-config {
	custom-config-id service:Firewall:firewall.sh
	custom-command firewall.sh
	config {
	iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.2 dev eth1
	
	}
    }
    services {IPForward DefaultRoute SSH DHCPClient Firewall}
}

node n12 {
    type rj45
    network-config {
	hostname enp0s3
	!
    }
    canvas c1
    iconcoords {57.0 460.0}
    labelcoords {57.0 492.0}
    interface-peer {0 n11}
}

link l1 {
    color Yellow
    nodes {n2 n1}
    bandwidth 0
}

link l2 {
    color Yellow
    nodes {n3 n1}
    bandwidth 0
}

link l3 {
    color Yellow
    nodes {n4 n1}
    bandwidth 0
}

link l4 {
    color Yellow
    nodes {n5 n1}
    bandwidth 0
}

link l5 {
    color Yellow
    nodes {n6 n1}
    bandwidth 0
}

link l6 {
    color Yellow
    nodes {n7 n1}
    bandwidth 0
}

link l7 {
    color Yellow
    nodes {n1 n11}
    bandwidth 0
}

link l8 {
    color Yellow
    nodes {n12 n11}
}

annotation a1 {
    iconcoords {232.0 50.0}
    type text
    label {Team Australia}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a2 {
    type text
    iconcoords {426.0 58.0}
    label {}
    canvas c1
}

annotation a3 {
    type text
    iconcoords {-23.0 48.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {800 515}
    wallpaper-style {scaled}
    wallpaper {/usr/share/backgrounds/ilab/light-background.jpg}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 0
}

option session {
    controlnet=10.44.44.0/24
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

